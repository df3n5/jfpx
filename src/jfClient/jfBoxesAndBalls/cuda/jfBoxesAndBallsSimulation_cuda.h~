#ifndef JFBOXESANDBALLSSIMULATION_CUDA_H
#define JFBOXESANDBALLSSIMULATION_CUDA_H

#include <jfSimulation/jfSimulation.h>
#include <jfEvent/jfEvent.h>
#include <jfClient/jfBoxesAndBalls/cuda/jfBoxesAndBallsEventHandler_cuda.h>
#include <jfClient/jfBoxesAndBalls/cuda/jfBoxesAndBalls3DGraphicsHandler_cuda.h>
#include <jfGraphics/jfWindowManager/jfWindowManager.h>
#include <jfGraphics/jfWindowManager/jfSDL/jfSDL.h>
#include <jfGraphics/jf3DGraphics/jf3DGraphicsHandler.h>
#include <jfGraphics/jf3DGraphics/jfSDLGL/jfSDLGL3DGraphicsHandler.h>

#include <jfTimer/jfTimer.h>
#include <jfTimer/jfPerformanceTimer.h>

#include <jfpx/jfCollisionData.h>
#include <jfpx/x86/jfContactResolver_x86.h>
#include <jfpx/x86/jfCollisionDetector_x86.h>
#include <jfpx/x86/jfCollisionPlane_x86.h>

#include <jfpx/cuda/jfpxFactory_cuda.h>
#include <jfpx/x86/jfpxFactory_x86.h>
#include <jfShape/x86/jfShapeFactory_x86.h>

#include <jfLog/jfLog.h>

//#include <sys/time.h>

#include <vector>
using namespace std;

class jfBoxesAndBallsSimulation_cuda : public jfSimulation
{
	public:
		jfBoxesAndBallsSimulation_cuda();
		virtual ~jfBoxesAndBallsSimulation_cuda();
		virtual bool init();
		virtual void run();
        virtual void fire();
		void updateObjects(jfReal timeStep);
		void generateContacts();
		void drawDebug();
    protected:
		//Constants
        const static unsigned m_MaxContacts = 32;
        const static unsigned m_MaxBoxes = 0;
        const static unsigned m_MaxBalls = 128;
		const static bool m_RenderDebugInfo = true;

        jfBoxesAndBallsEventHandler_cuda* m_EventHandler;
        jfWindowManager* m_WindowManager;
        jfBoxesAndBalls3DGraphicsHandler_cuda* m_3DGraphicsHandler;
        jfTimer* m_Timer;
        int m_LastFrameDuration;

        //Collision Objects
        vector<jfBall*> m_Balls;
        vector<jfBox*> m_Boxes;
        jfCollisionPlane* m_Plane;

        bool m_MousePressedLast;
		//vector<jfContact*> m_Contacts;
		//Collision data
		jfCollisionData* m_CollisionData;
		jfContactResolver* m_ContactResolver;
		jfCollisionDetector* m_CollisionDetector;
		//Factories
		jfpxFactory* m_PhysicsFactory;
		jfShapeFactory* m_ShapeFactory;

        jfFPSCamera* m_Cam;

        //timeval t1, t2;
        double m_ElapsedTime;


};

#endif //JFBOXESANDBALLSSIMULATION_H

